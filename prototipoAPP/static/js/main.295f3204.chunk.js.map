{"version":3,"sources":["logo.png","components/logo.js","views/Login/index.js","auth.js","views/Cadastro/index.js","views/Home/index.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","Avatar","variant","style","width","height","margin","backgroundColor","marginTop","marginBottom","src","LogoIMG","alt","Login","state","mensagem","status","marginY","validationSchema","Yup","shape","email","required","senha","Grid","Paper","elevation","padding","align","Typography","color","this","Alert","severity","initialValues","onSubmit","values","props","setSubmitting","requestInfo","method","body","JSON","stringify","usuario","headers","Headers","fetch","then","resposta","ok","json","Error","token","console","log","localStorage","setItem","history","push","setState","catch","erro","as","TextField","name","label","placeholder","type","fullWidth","helperText","className","Link","href","Button","disabled","isSubmitting","Component","PrivateRoute","component","reset","render","getItem","to","pathname","Cadastro","senha1","senha2","oneOf","Home","container","direction","justify","alignItems","onClick","clear","Routes","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.295f3204.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.47caa2f7.png\";","import React from 'react';\r\nimport LogoIMG from './../logo.png'\r\nimport { Avatar } from '@material-ui/core'\r\nexport default function Logo() {\r\n    const logoStyle = { width: 280, height: 'auto', margin: 'auto', backgroundColor: 'transparent', marginTop: '20px', marginBottom: '40px' }\r\n    const logoStyleImg = { width: 150 }\r\n    return (\r\n        <Avatar variant=\"square\" style={logoStyle}>\r\n            <img src={LogoIMG} alt=\"\" style={logoStyleImg} />\r\n        </Avatar>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { Button, Grid, Paper, TextField, Typography, Link } from '@material-ui/core';\r\nimport {Alert} from '@material-ui/lab'\r\nimport Logo from './../../components/logo'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nexport default class Login extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            mensagem: '',\r\n            status: ''\r\n        }\r\n    }\r\n    render() {\r\n        const paperStyle = { padding: 20, height: 'auto', width: 280, margin: '20px auto' }\r\n        const textStyle = { color: '#92c52a' }\r\n        const marginY = { marginTop: '10px', marginBottom: '10px' }\r\n        const initialValues = {\r\n            email: '',\r\n            senha: ''\r\n        }\r\n        const onSubmit = (values, props) => {\r\n            props.setSubmitting(true)\r\n            const requestInfo = {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    usuario: values\r\n                }),\r\n                headers: new Headers({\r\n                    'Content-type': 'application/json'\r\n                })\r\n            }\r\n            fetch('http://localhost:3001/login', requestInfo).then(resposta => {\r\n                if(resposta.ok){\r\n                    return resposta.json()\r\n                }\r\n                throw new Error(resposta.mensagem)\r\n            }).then(token => {\r\n                console.log(token.mensagem)\r\n                props.setSubmitting(false)\r\n                if(token.status == 'sucesso'){\r\n                    localStorage.setItem('token', token.mensagem)\r\n                    this.props.history.push('/')\r\n                }else{\r\n                    this.setState({\r\n                        mensagem: token.mensagem, \r\n                        status: token.status\r\n                    })\r\n                }\r\n            }).catch(erro => {\r\n                props.setSubmitting(false)\r\n                this.setState({\r\n                    mensagem: \"Erro na requisição\", \r\n                    status: 'error'\r\n                })\r\n            })\r\n        }\r\n        const validationSchema = Yup.object().shape({\r\n            email: Yup.string().email('Por favor preencha um e-mail válido').required(\"Obrigatório\"),\r\n            senha: Yup.string().required(\"Obrigatório\")\r\n        })\r\n        return (\r\n            <Grid>\r\n                <Paper elevation={5} style={paperStyle}>\r\n                    <Grid align=\"center\">\r\n                        <Logo />\r\n                        <Typography variant=\"h6\" style={textStyle}>\r\n                            Entrar\r\n                        </Typography>\r\n                    </Grid>\r\n                    {this.state.mensagem != '' ? (<Alert severity={this.state.status}>{this.state.mensagem}</Alert>) : ''}\r\n                    <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n                        {(props) => (\r\n                            <Form>\r\n                                <Field as={TextField} name=\"email\" label=\"E-mail\" placeholder=\"E-mail\" type=\"email\" variant=\"outlined\" fullWidth required style={marginY} helperText={<ErrorMessage name=\"email\" />} />\r\n                                <Field as={TextField} name=\"senha\" label=\"Senha\" placeholder=\"Senha\" type=\"password\" variant=\"outlined\" fullWidth required style={marginY} helperText={<ErrorMessage name=\"senha\" />} />\r\n                                <Typography variant=\"subtitle2\" className=\"color-grey\">\r\n                                    Não possui conta ainda? &nbsp;\r\n                                    <Link href=\"/cadastro\" variant=\"subtitle2\" className=\"color-green\">Resgistre-se aqui</Link>\r\n                                </Typography>\r\n                                <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth style={marginY} disabled={props.isSubmitting}>ENTRE</Button>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n\r\n                </Paper>\r\n            </Grid>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\n\r\nconst isAuth = () => {\r\n    if(localStorage.getItem('token') !== null){\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nconst PrivateRoute = ({component: Component, ...reset}) => {\r\n    return (\r\n        <Route\r\n        {...reset}\r\n        render={props => isAuth() ? (<Component {...props}/>) : (\r\n            <Redirect\r\n            to={{\r\n                pathname: '/login',\r\n                state: {mensagem: 'Faça login', status: 'warning'}\r\n            }}\r\n            />\r\n        )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute","import React, { Component } from 'react';\r\nimport { Button, Grid, Paper, TextField, Typography, Link } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab'\r\nimport Logo from './../../components/logo'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nexport default class Cadastro extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            mensagem: '',\r\n            status: ''\r\n        }\r\n    }\r\n    render() {\r\n        const paperStyle = { padding: 20, height: 'auto', width: 280, margin: '20px auto' }\r\n        const textStyle = { color: '#92c52a' }\r\n        const marginY = { marginTop: '10px', marginBottom: '10px' }\r\n        const initialValues = {\r\n            email: '',\r\n            senha1: '',\r\n            senha2: ''\r\n        }\r\n        const onSubmit = (values, props) => {\r\n            props.setSubmitting(true)\r\n            const requestInfo = {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    usuario: values\r\n                }),\r\n                headers: new Headers({\r\n                    'Content-type': 'application/json'\r\n                })\r\n            }\r\n            fetch('http://localhost:3001/criar/usuario', requestInfo).then(resposta => {\r\n                if (resposta.ok) {\r\n                    return resposta.json()\r\n                }\r\n                throw new Error(resposta.mensagem)\r\n            }).then(token => {\r\n                console.log(token.mensagem)\r\n                props.setSubmitting(false)\r\n                if (token.status == 'sucesso') {\r\n                    localStorage.setItem('token', token.mensagem)\r\n                    this.props.history.push('/')\r\n                } else {\r\n                    this.setState({\r\n                        mensagem: token.mensagem,\r\n                        status: token.status\r\n                    })\r\n                }\r\n            }).catch(erro => {\r\n                props.setSubmitting(false)\r\n                this.setState({\r\n                    mensagem: \"Erro na requisição\",\r\n                    status: 'error'\r\n                })\r\n            })\r\n        }\r\n        const validationSchema = Yup.object().shape({\r\n            email: Yup.string().email('Por favor preencha um e-mail válido').required(\"Obrigatório\"),\r\n            senha1: Yup.string().required(\"Obrigatório\"),\r\n            senha2: Yup.string().required(\"Obrigatório\").oneOf([Yup.ref('senha1'), null], \"Senhas não batem\")\r\n        })\r\n        return (\r\n            <Grid>\r\n                <Paper elevation={5} style={paperStyle}>\r\n                    <Grid align=\"center\">\r\n                        <Logo />\r\n                        <Typography variant=\"h6\" style={textStyle}>\r\n                            Novo Registro\r\n                        </Typography>\r\n                    </Grid>\r\n                    {this.state.mensagem != '' ? (<Alert severity={this.state.status}>{this.state.mensagem}</Alert>) : ''}\r\n                    <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n                        {(props) => (\r\n                            <Form>\r\n                                <Field as={TextField} name=\"email\" label=\"E-mail\" placeholder=\"E-mail\" type=\"email\" variant=\"outlined\" fullWidth required style={marginY} helperText={<ErrorMessage name=\"email\" />} />\r\n                                <Field as={TextField} name=\"senha1\" label=\"Senha\" placeholder=\"Senha\" type=\"password\" variant=\"outlined\" fullWidth required style={marginY} helperText={<ErrorMessage name=\"senha1\" />} />\r\n                                <Field as={TextField} name=\"senha2\" label=\"Confirmar Senha\" placeholder=\"Confirmar Senha\" type=\"password\" variant=\"outlined\" fullWidth required style={marginY} helperText={<ErrorMessage name=\"senha2\" />} />\r\n                                <Typography variant=\"subtitle2\" className=\"color-grey\">\r\n                                    Já possui conta? &nbsp;\r\n                                    <Link href=\"/login\" variant=\"subtitle2\" className=\"color-green\">\r\n                                        Entre!\r\n                                    </Link>\r\n                                </Typography>\r\n                                <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth style={marginY}>REGISTRAR-SE</Button>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n\r\n\r\n                </Paper>\r\n\r\n            </Grid>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Button, Grid, Paper, Typography } from '@material-ui/core';\r\nimport Logo from './../../components/logo'\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        const paperStyle = { padding: 20, height: 'auto', width: 280, margin: '20px auto' }\r\n        const marginY = { marginTop: '10px', marginBottom: '10px' }\r\n        const logout = ()  => {\r\n            localStorage.clear()\r\n            this.props.history.push('/login')\r\n        }\r\n        return (\r\n            <Grid>\r\n                <Paper elevation={5} style={paperStyle}>\r\n                    <Grid align=\"center\">\r\n                        <Logo />\r\n                    </Grid>\r\n\r\n                    <Typography variant=\"h5\" className=\"color-green\" style={marginY}>\r\n                        Bem Vindo!\r\n                    </Typography>\r\n\r\n                    <Typography variant=\"h6\" style={marginY}>\r\n                        Agora você é um filiado!\r\n                    </Typography>\r\n\r\n                    <Typography variant=\"body1\" align=\"justify\" style={marginY}>\r\n                        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Ullam corporis corrupti delectus enim officia accusantium maiores modi laudantium placeat cupiditate facere molestiae nostrum autem architecto dolores quis voluptatum, ut libero.\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Natus quibusdam asperiores autem itaque optio! Omnis, est. Omnis minima ut error qui consequatur ducimus quia beatae architecto, impedit facere quo enim.\r\n                    </Typography>\r\n\r\n                    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n                        <Typography variant=\"overline\" className=\"color-grey-subtitle\" align=\"left\">\r\n                            ip: 000.000.0.00\r\n                        </Typography>\r\n                        <Button type=\"button\" color=\"secondary\" onClick={logout}>SAIR</Button>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\nimport PrivateRoute from './auth'\r\nimport Login from './views/Login'\r\nimport Cadastro from './views/Cadastro'\r\nimport Home from './views/Home'\r\nconst Routes = () => (\r\n    <Router>\r\n        <Switch>\r\n            <PrivateRoute exact path=\"/\" component={Home}/>\r\n            <Route exact path=\"/login\" component={Login}/>\r\n            <Route exact path=\"/cadastro\" component={Cadastro}/>\r\n        </Switch>\r\n    </Router>\r\n)\r\n\r\nexport default Routes;","import Login from './views/Login'\r\nimport Routes from './routes'\r\nfunction App() {\r\n    return ( \r\n        <Routes/>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}